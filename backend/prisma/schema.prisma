generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model categories {
  id            Int             @id @default(autoincrement())
  name          String          @db.VarChar(255)
  subcategories subcategories[]
}

model product_images {
  id         Int      @id @default(autoincrement())
  product_id Int
  image_url  String   @db.VarChar(255)
  is_primary Boolean  @default(false)
  products   products @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "product_images_ibfk_1")

  @@index([product_id], map: "product_id")
}

model products {
  id                    Int                     @id @default(autoincrement())
  name                  String                  @db.VarChar(255)
  description           String?                 @db.Text
  price                 Decimal                 @db.Decimal(10, 2)
  promotional_price     Decimal?                @db.Decimal(10, 2)
  quantity              Int?
  is_active             Boolean                 @default(true)
  deleted_at            DateTime?               @db.Timestamp(0)
  product_images        product_images[]
  product_subcategories product_subcategories[]
}

model subcategories {
  id                    Int                     @id @default(autoincrement())
  category_id           Int?
  name                  String                  @db.VarChar(255)
  group_type_id         Int
  product_subcategories product_subcategories[]
  categories            categories?             @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "subcategories_ibfk_1")
  subcategory_groups    subcategory_groups      @relation(fields: [group_type_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "subcategories_ibfk_2")

  @@index([category_id], map: "category_id")
  @@index([group_type_id], map: "group_type_id")
}

model users {
  id            Int    @id @default(autoincrement())
  name          String @db.VarChar(255)
  email         String @unique(map: "email") @db.VarChar(255)
  password_hash String @db.VarChar(255)
}

model product_subcategories {
  product_id     Int
  subcategory_id Int
  products       products      @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "product_subcategories_ibfk_1")
  subcategories  subcategories @relation(fields: [subcategory_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "product_subcategories_ibfk_2")

  @@id([product_id, subcategory_id])
  @@index([subcategory_id], map: "subcategory_id")
}

model subcategory_groups {
  id            Int             @id @default(autoincrement())
  name          String          @unique(map: "name") @db.VarChar(255)
  subcategories subcategories[]
}
